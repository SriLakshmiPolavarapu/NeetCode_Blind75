# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
# This solution is also called as Tortoise and Hare Algo (or) Floyd's Algo
        p1 = p2 = head

        while p2 and p2.next:
            p1 = p1.next
            p2 = p2.next.next

            if p1 == p2:
                return True
        return False


# Brute Force method is Hash table but it doesn't work in all the cases.
# If element is repeated more times in a Linked List then entering them into Hash Table would return a wrong answer.

