public class ListNode {
      int val;
      ListNode next;
      ListNode() {}
      ListNode(int val) { this.val = val; }
      ListNode(int val, ListNode next) { this.val = val; this.next = next; }
  }

class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null)
            return null;

        LinkedList<Integer> values = new LinkedList<>();
        ListNode current = head;

        while(current != null)
        {
            values.add(current.val);
            current = current.next;
        }  
        //reverse
        ListNode newHead = new ListNode(values.getLast());
        current = newHead;

        for(int i=values.size()-2; i>=0;i--)
        {
            current.next = new ListNode(values.get(i));
            current = current.next;
        }
        return newHead;

    }
  public static void printlist(ListNode head)
  {
    while(head != null)
      {
      System.out.print(head.val + "-->");
      head = head.next;
      }
    System.out.print("null");
    }
}
